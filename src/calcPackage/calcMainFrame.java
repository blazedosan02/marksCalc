package calcPackage;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

public class calcMainFrame extends javax.swing.JFrame {

    String basiCalculationRegex = "[-]*\\d+(\\.\\d+)?+[+-\\/*]\\d+(\\.\\d+)?+";

    public calcMainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanelCalc = new javax.swing.JPanel();
        displayTextField = new javax.swing.JTextField();
        Button4 = new javax.swing.JButton();
        BackspaceButton = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button0 = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        DivisionButton = new javax.swing.JButton();
        PercentButton = new javax.swing.JButton();
        PeriodButton = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        TimesButton = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        EqualsButton = new javax.swing.JButton();
        MinusButton = new javax.swing.JButton();
        PlusButton = new javax.swing.JButton();
        resultDisplay = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calc");
        setResizable(false);

        displayTextField.setEditable(false);
        displayTextField.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        displayTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        displayTextField.setText("0");
        displayTextField.setBorder(null);
        displayTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                displayTextFieldKeyReleased(evt);
            }
        });

        Button4.setText("4");
        Button4.setMaximumSize(new java.awt.Dimension(60, 104));
        Button4.setMinimumSize(new java.awt.Dimension(60, 104));
        Button4.setPreferredSize(new java.awt.Dimension(60, 104));
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        BackspaceButton.setText("<-");
        BackspaceButton.setMaximumSize(new java.awt.Dimension(60, 104));
        BackspaceButton.setMinimumSize(new java.awt.Dimension(60, 104));
        BackspaceButton.setPreferredSize(new java.awt.Dimension(60, 104));
        BackspaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackspaceButtonActionPerformed(evt);
            }
        });

        Button7.setText("7");
        Button7.setMaximumSize(new java.awt.Dimension(60, 104));
        Button7.setMinimumSize(new java.awt.Dimension(60, 104));
        Button7.setPreferredSize(new java.awt.Dimension(60, 104));
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });

        Button1.setText("1");
        Button1.setMaximumSize(new java.awt.Dimension(60, 104));
        Button1.setMinimumSize(new java.awt.Dimension(60, 104));
        Button1.setPreferredSize(new java.awt.Dimension(60, 104));
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button0.setText("0");
        Button0.setMaximumSize(new java.awt.Dimension(60, 104));
        Button0.setMinimumSize(new java.awt.Dimension(60, 104));
        Button0.setPreferredSize(new java.awt.Dimension(60, 104));
        Button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button0ActionPerformed(evt);
            }
        });

        ClearButton.setText("C");
        ClearButton.setMaximumSize(new java.awt.Dimension(60, 104));
        ClearButton.setMinimumSize(new java.awt.Dimension(60, 104));
        ClearButton.setPreferredSize(new java.awt.Dimension(60, 104));
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        DivisionButton.setText("/");
        DivisionButton.setMaximumSize(new java.awt.Dimension(60, 104));
        DivisionButton.setMinimumSize(new java.awt.Dimension(60, 104));
        DivisionButton.setPreferredSize(new java.awt.Dimension(60, 104));
        DivisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivisionButtonActionPerformed(evt);
            }
        });

        PercentButton.setText("%");
        PercentButton.setMaximumSize(new java.awt.Dimension(60, 104));
        PercentButton.setMinimumSize(new java.awt.Dimension(60, 104));
        PercentButton.setPreferredSize(new java.awt.Dimension(60, 104));
        PercentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PercentButtonActionPerformed(evt);
            }
        });

        PeriodButton.setText(".");
        PeriodButton.setMaximumSize(new java.awt.Dimension(60, 104));
        PeriodButton.setMinimumSize(new java.awt.Dimension(60, 104));
        PeriodButton.setPreferredSize(new java.awt.Dimension(60, 104));
        PeriodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodButtonActionPerformed(evt);
            }
        });

        Button5.setText("5");
        Button5.setMaximumSize(new java.awt.Dimension(60, 104));
        Button5.setMinimumSize(new java.awt.Dimension(60, 104));
        Button5.setPreferredSize(new java.awt.Dimension(60, 104));
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });

        Button2.setText("2");
        Button2.setMaximumSize(new java.awt.Dimension(60, 104));
        Button2.setMinimumSize(new java.awt.Dimension(60, 104));
        Button2.setPreferredSize(new java.awt.Dimension(60, 104));
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button8.setText("8");
        Button8.setMaximumSize(new java.awt.Dimension(60, 104));
        Button8.setMinimumSize(new java.awt.Dimension(60, 104));
        Button8.setPreferredSize(new java.awt.Dimension(60, 104));
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });

        TimesButton.setText("*");
        TimesButton.setMaximumSize(new java.awt.Dimension(60, 104));
        TimesButton.setMinimumSize(new java.awt.Dimension(60, 104));
        TimesButton.setPreferredSize(new java.awt.Dimension(60, 104));
        TimesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimesButtonActionPerformed(evt);
            }
        });

        Button6.setText("6");
        Button6.setMaximumSize(new java.awt.Dimension(60, 104));
        Button6.setMinimumSize(new java.awt.Dimension(60, 104));
        Button6.setPreferredSize(new java.awt.Dimension(60, 104));
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });

        Button3.setText("3");
        Button3.setMaximumSize(new java.awt.Dimension(60, 104));
        Button3.setMinimumSize(new java.awt.Dimension(60, 104));
        Button3.setPreferredSize(new java.awt.Dimension(60, 104));
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button9.setText("9");
        Button9.setMaximumSize(new java.awt.Dimension(60, 104));
        Button9.setMinimumSize(new java.awt.Dimension(60, 104));
        Button9.setPreferredSize(new java.awt.Dimension(60, 104));
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });

        EqualsButton.setText("=");
        EqualsButton.setMaximumSize(new java.awt.Dimension(60, 104));
        EqualsButton.setMinimumSize(new java.awt.Dimension(60, 104));
        EqualsButton.setPreferredSize(new java.awt.Dimension(60, 104));
        EqualsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsButtonActionPerformed(evt);
            }
        });

        MinusButton.setText("-");
        MinusButton.setMaximumSize(new java.awt.Dimension(60, 104));
        MinusButton.setMinimumSize(new java.awt.Dimension(60, 104));
        MinusButton.setPreferredSize(new java.awt.Dimension(60, 104));
        MinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusButtonActionPerformed(evt);
            }
        });

        PlusButton.setText("+");
        PlusButton.setMaximumSize(new java.awt.Dimension(60, 104));
        PlusButton.setMinimumSize(new java.awt.Dimension(60, 104));
        PlusButton.setPreferredSize(new java.awt.Dimension(60, 104));
        PlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlusButtonActionPerformed(evt);
            }
        });

        resultDisplay.setEditable(false);
        resultDisplay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        resultDisplay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        resultDisplay.setBorder(null);

        javax.swing.GroupLayout mainPanelCalcLayout = new javax.swing.GroupLayout(mainPanelCalc);
        mainPanelCalc.setLayout(mainPanelCalcLayout);
        mainPanelCalcLayout.setHorizontalGroup(
            mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelCalcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(displayTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelCalcLayout.createSequentialGroup()
                        .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelCalcLayout.createSequentialGroup()
                                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelCalcLayout.createSequentialGroup()
                                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelCalcLayout.createSequentialGroup()
                                        .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelCalcLayout.createSequentialGroup()
                                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PercentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelCalcLayout.createSequentialGroup()
                                        .addComponent(DivisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelCalcLayout.createSequentialGroup()
                                        .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TimesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelCalcLayout.createSequentialGroup()
                                .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelCalcLayout.createSequentialGroup()
                                .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EqualsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(mainPanelCalcLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resultDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelCalcLayout.setVerticalGroup(
            mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelCalcLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PercentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DivisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button0, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EqualsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        fileMenu.setText("File");

        aboutMenu.setText("About");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        fileMenu.add(aboutMenu);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanelCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanelCalc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:

        displayTextField.setText(getTextFieldEntry() + "1");

        performCalculationButton("");

        displayTextField.requestFocus();

    }//GEN-LAST:event_Button1ActionPerformed


    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "2");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "3");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "4");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "5");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "7");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "8");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "9");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button9ActionPerformed

    private void Button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button0ActionPerformed
        // TODO add your handling code here:
        displayTextField.setText(getTextFieldEntry() + "0");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button0ActionPerformed

    private void PeriodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodButtonActionPerformed
        // TODO add your handling code here:

        if (displayTextField.getText().equals("0")) {

            displayTextField.setText("0.");

        } else {
            displayTextField.setText(getTextFieldEntry() + ".");
        }

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_PeriodButtonActionPerformed

    private void displayTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_displayTextFieldKeyReleased

        createFilteredField(displayTextField);

        getKeyDisplay(evt);

        if (displayTextField.getText().matches(basiCalculationRegex)) {
            Calculate(false);
        }

    }//GEN-LAST:event_displayTextFieldKeyReleased

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        displayTextField.setText(getTextFieldEntry() + "6");

        performCalculationButton("");

        displayTextField.requestFocus();
    }//GEN-LAST:event_Button6ActionPerformed

    private void PlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlusButtonActionPerformed

        displayTextField.setText(getTextFieldEntry() + "+");

        performCalculationButton("+");

        displayTextField.requestFocus();


    }//GEN-LAST:event_PlusButtonActionPerformed

    private void MinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusButtonActionPerformed

        displayTextField.setText(getTextFieldEntry() + "-");

        performCalculationButton("-");

        displayTextField.requestFocus();
    }//GEN-LAST:event_MinusButtonActionPerformed

    private void TimesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimesButtonActionPerformed

        displayTextField.setText(getTextFieldEntry() + "*");

        performCalculationButton("*");

        displayTextField.requestFocus();
    }//GEN-LAST:event_TimesButtonActionPerformed

    private void DivisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivisionButtonActionPerformed

        displayTextField.setText(getTextFieldEntry() + "/");

        performCalculationButton("/");

        displayTextField.requestFocus();
    }//GEN-LAST:event_DivisionButtonActionPerformed

    private void EqualsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EqualsButtonActionPerformed

        //The previous validation prevents the equals key from setting to blank if no operation is made
        if (!displayTextField.getText().equals("") && !resultDisplay.getText().equals("")) {

            displayTextField.setText(resultDisplay.getText());

            resultDisplay.setText("");

        }

        displayTextField.requestFocus();

    }//GEN-LAST:event_EqualsButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed

        displayTextField.setText("0");
        resultDisplay.setText("");

        displayTextField.requestFocus();

    }//GEN-LAST:event_ClearButtonActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:

        JOptionPane.showInternalMessageDialog(null, "Marco Lecona 2024-2025", "Program By", 1);

    }//GEN-LAST:event_aboutMenuActionPerformed

    private void PercentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PercentButtonActionPerformed
        // TODO add your handling code here:

        createFilteredField(displayTextField);

        if (displayTextField.getText().matches(basiCalculationRegex)) {
            Calculate(true);
        }

    }//GEN-LAST:event_PercentButtonActionPerformed

    private void BackspaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackspaceButtonActionPerformed

        if (!displayTextField.getText().isEmpty()) {

            displayTextField.setText(displayTextField.getText().substring(0, displayTextField.getText().length() - 1));

            resultDisplay.setText("");
        }
        
        performCalculationButton("");
        
        displayTextField.requestFocus();

    }//GEN-LAST:event_BackspaceButtonActionPerformed

    public void Calculate(boolean isPercentage) {

        String input = displayTextField.getText();
        char[] inputArray = input.toCharArray();

        Number operand1 = null;
        Number operand2 = null;
        char operator = ' ';
        StringBuilder currentNumber = new StringBuilder();

        boolean negativeNumber = true;

        for (char c : inputArray) {

            if (Character.isDigit(c) || c == '.' || (c == '-' && negativeNumber)) {

                currentNumber.append(c);

                negativeNumber = false;

            } else {

                if (operand1 == null) {

                    operand1 = processNumber(currentNumber.toString());

                } else {

                    operand2 = processNumber(currentNumber.toString());
                }

                operator = c;
                currentNumber.setLength(0); // Reset for the next number
            }
        }

        if (operand2 == null && currentNumber.length() > 0) {

            operand2 = processNumber(currentNumber.toString());
        }

        if (isPercentage) {

            //Validation is the percentage button is pressed, the operands will be procesed accordingly
            List<Number> getPercentageNumbers = percentageCalculation(operand1, operand2, operator);

            operand1 = getPercentageNumbers.get(0);

            operand2 = getPercentageNumbers.get(1);
        }

        double result = 0.0;

        switch (operator) {
            case '+' ->
                result = operand1.doubleValue() + operand2.doubleValue();
            case '-' ->
                result = operand1.doubleValue() - operand2.doubleValue();
            case '*' ->
                result = operand1.doubleValue() * operand2.doubleValue();
            case '/' -> {
                if (operand2.doubleValue() == 0) {
                    displayTextField.setText("");
                    resultDisplay.setText("Undefined");
                    return;
                }
                result = operand1.doubleValue() / operand2.doubleValue();
            }

        }

        // Display the result
        if (result == (int) result) {
            // Display as integer if the result is a whole number
            resultDisplay.setText(Integer.toString((int) result));
        } else {
            // Display as a floating-point number
            resultDisplay.setText(Double.toString(result));
        }
    }

    public List<Number> percentageCalculation(Number operand1, Number operand2, char operator) {
        List<Number> numberList = new ArrayList<>();

        //This method takes the two operands previosly separated and gives the values for posterior calculation of the percentage
        operand2 = operand2.doubleValue() / 100;

        //Validation if the percentage is multiplied or divided, does not require the following calculation
        if (!(operator == '*' || operator == '/')) {

            operand2 = operand1.doubleValue() * operand2.doubleValue();
        }

        numberList.add(operand1);

        numberList.add(operand2);

        return numberList;
    }

    public static Number processNumber(String input) {
        try {
            if (input.contains(".")) {
                return Double.valueOf(input);
            } else {
                return Long.valueOf(input);
            }
        } catch (NumberFormatException e) {
            throw new IllegalArgumentException("Invalid number format: " + input);
        }
    }

    public String getTextFieldEntry() {

        String currentText = displayTextField.getText();

        if (currentText.equals("0")) {

            currentText = "";
        }

        return currentText;
    }

    public void getKeyDisplay(KeyEvent evt) {

        //Check input of keys 
        if (evt.getKeyChar() == KeyEvent.VK_ENTER && (!displayTextField.getText().equals("") && !resultDisplay.getText().equals(""))) {

            //The previous validation prevents the enter key from setting to blank if no operation is made
            displayTextField.setText(resultDisplay.getText());

            resultDisplay.setText("");

        } else if (evt.getKeyChar() == '+' || evt.getKeyChar() == '-' || evt.getKeyChar() == '*' || evt.getKeyChar() == '/') {

            if (!resultDisplay.getText().equals("")) {

                displayTextField.setText(resultDisplay.getText());

            }

            displayTextField.setText(getTextFieldEntry() + evt.getKeyChar());

        } else if (evt.getKeyChar() == '.' && displayTextField.getText().equals("0")) {

            displayTextField.setText("0.");

        } else if (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE) {

            if (!displayTextField.getText().isEmpty()) {

                displayTextField.setText(displayTextField.getText().substring(0, displayTextField.getText().length() - 1));

                resultDisplay.setText("");
            }
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {

            displayTextField.setText(getTextFieldEntry());

            //Get the clipboard value
            try {
                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                String data = (String) clipboard.getData(DataFlavor.stringFlavor);
                displayTextField.setText(displayTextField.getText() + data);
            } catch (UnsupportedFlavorException | IOException ex) {
                ex.printStackTrace();
            }
        } else {

            displayTextField.setText(getTextFieldEntry() + evt.getKeyChar());

        }

    }

    public void getButtonDisplay(String operatorButton) {

        //Logic for setting moving the result to the main display when an operator is pressed for a button
        switch (operatorButton) {

            case "+":
                if (!resultDisplay.getText().equals("")) {

                    displayTextField.setText(resultDisplay.getText() + operatorButton);
                }
                break;
            case "-":
                if (!resultDisplay.getText().equals("")) {

                    displayTextField.setText(resultDisplay.getText() + operatorButton);
                }
                break;
            case "*":
                if (!resultDisplay.getText().equals("")) {

                    displayTextField.setText(resultDisplay.getText() + operatorButton);
                }
                break;
            case "/":
                if (!resultDisplay.getText().equals("")) {

                    displayTextField.setText(resultDisplay.getText() + operatorButton);
                }
                break;

        }

    }

    public void createFilteredField(JTextField field) {
        AbstractDocument document = (AbstractDocument) field.getDocument();
        int maxCharacters = 50;
        document.setDocumentFilter(new DocumentFilter() {
            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offs, int length, String str, AttributeSet a) throws BadLocationException {
                String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
                StringBuilder text = new StringBuilder(currentText);
                text.replace(offs, offs + length, str);  // Simulate the new text after replacement

                if (isValidExpression(text.toString())) {
                    if (text.length() <= maxCharacters) {
                        super.replace(fb, offs, length, str, a);
                    } else {
                        Toolkit.getDefaultToolkit().beep();
                    }
                } else {
                    Toolkit.getDefaultToolkit().beep();
                }
            }

            @Override
            public void insertString(DocumentFilter.FilterBypass fb, int offs, String str, AttributeSet a) throws BadLocationException {
                replace(fb, offs, 0, str, a);
            }

            private boolean isValidExpression(String text) {
                // Ensure the entire text matches a valid arithmetic expression
                return text.matches("(([0-9]+(\\.[0-9]*)?)|([+\\-*/]))*")
                        && !text.matches(".*[+\\-*/]{2,}.*") // No consecutive operators
                        && !text.matches(".*\\d*\\.\\d*\\..*") // No multiple periods in one number
                        && !text.matches("^[+\\*/].*") // No leading operator
                        && !text.matches(".*\\.[+\\-*/].*");     // Period must be followed by a digit
            }
        });
    }

    public void performCalculationButton(String operatorButton) {

        createFilteredField(displayTextField);

        getButtonDisplay(operatorButton);

        if (displayTextField.getText().matches(basiCalculationRegex)) {
            Calculate(false);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calcMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calcMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calcMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calcMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calcMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackspaceButton;
    private javax.swing.JButton Button0;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JButton Button5;
    private javax.swing.JButton Button6;
    private javax.swing.JButton Button7;
    private javax.swing.JButton Button8;
    private javax.swing.JButton Button9;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DivisionButton;
    private javax.swing.JButton EqualsButton;
    private javax.swing.JButton MinusButton;
    private javax.swing.JButton PercentButton;
    private javax.swing.JButton PeriodButton;
    private javax.swing.JButton PlusButton;
    private javax.swing.JButton TimesButton;
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JTextField displayTextField;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel mainPanelCalc;
    private javax.swing.JTextField resultDisplay;
    // End of variables declaration//GEN-END:variables
}
